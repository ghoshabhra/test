# Write The Main Code Name Here Without Any Extensions

include customMake

# Spcify Compiler
ifeq ($(OPTION), 1)
#CC = g++ -O3 -funroll-all-loops
CC = g++ 
#CC = g++ -O3 -funroll-all-loops
else
ifeq ($(OPTION), 2)
CC = /opt/intel/cc/9.1.042/bin/icpc -O3 -static -ipo -axN -prefetch -unroll -prof_use
else
CC = /opt/intel_cc_80/bin/icpc -fast -tpp2 -unroll -IPF_fma -prof_use
endif
endif

# Write The Input Path for Header Files and Objects
INPUT_PATH = ../../CVDRIK/
OPENCV_PATH = /usr/local/

# Specify Headers : The ".h" Files for your Library 
HEADERS = $(INPUT_PATH)CVDRIKMisc/CVDRIKMisc.h \
		 $(INPUT_PATH)RGBtoGray/RGBtoGray.h \
		 $(INPUT_PATH)edgeDetection/edgeDetection.h \
	  		  
# Specify OpenCV Headers : The ".h" Files for Including OpenCV Library
OPENCV_HEADERS = $(OPENCV_PATH)include/opencv/cv.h \
		 $(OPENCV_PATH)include/opencv/cvaux.h \
		 $(OPENCV_PATH)include/opencv/cxcore.h \
		 $(OPENCV_PATH)include/opencv/highgui.h \
	
# Specify Objects : The ".o" Files Generated by Compiling the ".cpp" Files
OBJECTS = $(INPUT_PATH)CVDRIKMisc/CVDRIKMisc.o \
	$(INPUT_PATH)RGBtoGray/RGBtoGray.o \
	$(INPUT_PATH)edgeDetection/edgeDetection.o \
		  		  
# Compilation of the Main Code
ifneq ($(MAKECMDGOALS), clean)
$(MAKECMDGOALS) : $(MAKECMDGOALS).o $(OBJECTS)
	$(CC) -g -o $(MAKECMDGOALS) -lm $(MAKECMDGOALS).o $(OBJECTS)  -L $(OPENCV_PATH)lib -lopencv_core -lopencv_imgproc -lopencv_highgui 

# Main Code Object File
$(MAKECMDGOALS).o : $(MAKECMDGOALS).cpp $(OPENCV_HEADERS) $(HEADERS)
	$(CC) -c $(MAKECMDGOALS).cpp -I /usr/local/include/opencv
endif

# Object File for Miscelleneous Functions
$(INPUT_PATH)CVDRIKMisc/CVDRIKMisc.o : $(patsubst %.o, %.cpp, $@) $(patsubst %.o, %.h, $@)
	$(CC) -c $(patsubst %.o, %.cpp, $@) -o $@ -I /usr/local/include/opencv
	

# Object File for RGBtoGray Function
$(INPUT_PATH)RGBtoGray/RGBtoGray.o : $(patsubst %.o, %.cpp, $@) $(patsubst %.o, %.h, $@)
	$(CC) -c $(patsubst %.o, %.cpp, $@) -o $@ -I /usr/local/include/opencv

# Object File for edgedetection Function
$(INPUT_PATH)edgeDetection/edgeDetection.o : $(patsubst %.o, %.cpp, $@) $(patsubst %.o, %.h, $@)
	$(CC) -c $(patsubst %.o, %.cpp, $@) -o $@ -I /usr/local/include/opencv	

.PHONY : clean
clean :
	rm -f $(OBJECTS) *.o
